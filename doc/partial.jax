*partial.jax*	囲みの範囲を別ファイルにして、編集しやすくします。

Version : v0.1
Author  : yasunori-kirin0418
License : MIT license  {{{
    Permission is hereby granted, free of charge, to any person obtaining
    a copy of this software and associated documentation files (the
    "Software"), to deal in the Software without restriction, including
    without limitation the rights to use, copy, modify, merge, publish,
    distribute, sublicense, and/or sell copies of the Software, and to
    permit persons to whom the Software is furnished to do so, subject to
    the following conditions:
    The above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
}}}

==============================================================================
目次						*partial-contents*

概要				|partial-introduction|
使い方				|partial-usage|
インターフェイス		|partial-interface|
  変数				  |partial-variables|
  コマンド			  |partial-commands|
  関数				  |partial-functions|
囲みの例		  	|partial-surround-examples|
TODO				|partial-todo|
更新履歴			|partial-changelog|


==============================================================================
概要						*partial-introduction*

*partial.vim* は囲みの範囲を別ファイルにして、編集できるようにします。
また、編集した内容を元ファイルに反映できます。
マークダウンのコードブロックや、|dein|で使用できるtomlファイル内で記述できるluaや
vim scriptを別ファイルにすることで、LSPやフォーマッターを使えるようにして編集しやすくします。

最新版:
https://github.com/yasunori-kirin0418/partial.vim


==============================================================================
使い方						*partial-usage*



==============================================================================
インターフェイス				*partial-interface*

------------------------------------------------------------------------------
変数						*partial-variables*

g:partial#comment_out_symbols			*g:partial#comment_out_symbols*
	既定値:  { 'vim': '"', 'lua': '--' }
	囲みの範囲に使われている言語のコメントアウト記号。
	キーは|filetype|で、値には言語で使われているコメントアウトの記号にする。


g:partial#head_symbol				*g:partial#head_symbol*
	既定値:  ' <%'
g:partial#tail_symbol				*g:partial#tail_symbol*
	既定値:  ' %>'
	別ファイルにする範囲の囲みを作る際に、囲みとしての目印になります。
	コード中に出てこないような、ユニークな文字列にするのをお勧めします。
	NOTE: この値の使い方は、|partial-surround-examples|を確認してください。


g:partial#partial_path_prefix			*g:partial#partial_path_prefix*
	既定値:  ' partial_path: '
	別ファイルにする範囲の囲みで、別ファイルのパスを指定する手前の文字列です。
	NOTE: この値の使い方は、|partial-surround-examples|を確認してください。
	NOTE: このプラグインでの囲みであると理解しているなら空でも問題ありません。


g:partial#origin_path_prefix			*g:partial#origin_path_prefix*
	既定値:  ' origin_path: '
	別ファイル生成時に紐付く、元ファイルのパスの手前に挿入される文字列です。
	NOTE: この値の使い方は、|partial-surround-examples|を確認してください。
	NOTE: このプラグインによる囲みであると理解しているなら空でも問題ありません。


g:partial#open_type				*g:partial#open_type*
	既定値:  'edit'
	|:PartialOpen|による別ファイルの開き方を指定できます。
	使用できる値は下記の通りです。

		'edit'		|:edit|と同じ
		'vsplit'	|:vsplit|と同じ
		'split'		|:split|と同じ
		'tabedit'	|:tabedit|と同じ


------------------------------------------------------------------------------
コマンド					*partial-commands*

:PartialOpen[!] {filetype}			*:PartialOpen*


:PartialTabedit[!] {filetype}			*:PartialTabedit*


:PartialVsplit[!] {filetype}			*:PartialVsplit*


:PartialSplit[!] {filetype}			*:PartialSplit*


:PartialEdit[!] {filetype}			*:PartialEdit*


:PartialUpdate					*:PartialUpdate*


------------------------------------------------------------------------------
関数						*partial-functions*

						*partial#create()*
partial#create({create_flag}, {filetype})


						*partial#open()*
partial#open({create_flag}, {filetype}, {open_type} = |g:partial#open_type|)


partial#update_origin()				*partial#update_origin()*


==============================================================================
囲みの例					*partial-surround-examples*


==============================================================================
更新履歴					*partial-changelog*

2023-01-12 v0.1	  基本機能の実装完了

==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:cole=0
